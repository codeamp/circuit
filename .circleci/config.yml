# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

jobs:
  build:
    machine: true
      # specify the version
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Start Dependent Containers
          command: |
            set -x
            docker-compose up -d postgres redis
      - run: 
          name: Build Docker Container
          command: |
            set -x

            echo "RUN go get -u golang.org/x/tools/cmd/cover" >> Dockerfile
            echo "RUN go get -u github.com/rakyll/gotest" >> Dockerfile            

            docker-compose build circuit 
      - run: 
          name: Setup Test Environment
          command: |
            set -x

            sudo apt-get install -y npm
            
            echo '{ "insecure-registries":["0.0.0.0:5000"] }' | sudo tee /etc/docker/daemon.json
            sudo service docker restart

            sudo npm install -g codeclimate-test-reporter

            go get github.com/mattn/goveralls

            docker-compose up -d registry
      - run: 
          name: Run Tests
          command: |
            set -x
            docker-compose run --rm circuit /bin/sh -c "gotest -v -covermode=count -coverprofile=coverage.out ./..." || EXIT_CODE=$? && true
            codeclimate-test-reporter < coverage.out

            exit $EXIT_CODE
