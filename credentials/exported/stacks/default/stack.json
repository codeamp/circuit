{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "kube-aws Kubernetes node pool development default",
  "Parameters": {
    "ControlPlaneStackName": {
      "Type": "String",
      "Description": "The name of a control-plane stack used to import values into this stack"
    }
  },
  "Resources": {
    "Workers": {
      "Properties": {
        "HealthCheckGracePeriod": 600,
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "WorkersLC"
        },
        "MaxSize": "4",
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ],
        "MinSize": "1",
        "Tags": [
          {
            "Key": "kubernetes.io/cluster/development",
            "PropagateAtLaunch": "true",
            "Value": "true"
          },
          {
            "Key": "kube-aws:node-pool:name",
            "PropagateAtLaunch": "true",
            "Value": "default"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": "true",
            "Value": "development-default-kube-aws-worker"
          }
        ],
        "VPCZoneIdentifier": [
          "subnet-93095ccb",
          "subnet-5bdb9271",
          "subnet-af6b53d9",
          "subnet-0117233c"
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT20M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "2",
          "WaitOnResourceSignals": "true",
          "MaxBatchSize": "2",
          "PauseTime": "PT20M"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "etcd-client": [
              "etcd-client-env"
            ]
          },
          "etcd-client-env": {
            "files": {
              "/var/run/coreos/etcd-environment": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "ETCD_ENDPOINTS='",
                      "https://",
                      {
                        "Fn::Join": [
                          ".",
                          [
                            {
                              "Fn::Join": [
                                "-",
                                [
                                  "ec2",
                                  {
                                    "Fn::Join": [
                                      "-",
                                      {
                                        "Fn::Split": [
                                          ".",
                                          {
                                            "Fn::ImportValue": {
                                              "Fn::Sub": "${ControlPlaneStackName}-Etcd0EIP"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            "compute-1.amazonaws.com"
                          ]
                        ]
                      },
                      ":2379",
                      ",",
                      "https://",
                      {
                        "Fn::Join": [
                          ".",
                          [
                            {
                              "Fn::Join": [
                                "-",
                                [
                                  "ec2",
                                  {
                                    "Fn::Join": [
                                      "-",
                                      {
                                        "Fn::Split": [
                                          ".",
                                          {
                                            "Fn::ImportValue": {
                                              "Fn::Sub": "${ControlPlaneStackName}-Etcd1EIP"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            "compute-1.amazonaws.com"
                          ]
                        ]
                      },
                      ":2379",
                      ",",
                      "https://",
                      {
                        "Fn::Join": [
                          ".",
                          [
                            {
                              "Fn::Join": [
                                "-",
                                [
                                  "ec2",
                                  {
                                    "Fn::Join": [
                                      "-",
                                      {
                                        "Fn::Split": [
                                          ".",
                                          {
                                            "Fn::ImportValue": {
                                              "Fn::Sub": "${ControlPlaneStackName}-Etcd2EIP"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            "compute-1.amazonaws.com"
                          ]
                        ]
                      },
                      ":2379",
                      "'\n"
                    ]
                  ]
                }
              }
            }
          }
        }
      }
    },
    "WorkersLC": {
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "200",
              "VolumeType": "gp2"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "IAMInstanceProfileWorker"
        },
        "ImageId": "ami-e2d33d98",
        "InstanceType": "r4.large",
        "KeyName": "checkr-devops",
        "SecurityGroups": [
          "sg-937ac5ec",
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${ControlPlaneStackName}-WorkerSecurityGroup"
            }
          }
        ],
        "PlacementTenancy": "default",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo 'KUBE_AWS_STACK_NAME=",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "' >> /etc/environment\n"
                    ]
                  ]
                },
                ". /etc/environment\nexport COREOS_PRIVATE_IPV4 COREOS_PRIVATE_IPV6 COREOS_PUBLIC_IPV4 COREOS_PUBLIC_IPV6\nREGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nUSERDATA_FILE=userdata-worker\n\nrun() {\n  bin=\"$1\"; shift\n  while ! /usr/bin/rkt run \\\n    --net=host \\\n    --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true --mount volume=dns,target=/etc/resolv.conf \\\n    --volume=awsenv,kind=host,source=/var/run/coreos,readOnly=false --mount volume=awsenv,target=/var/run/coreos \\\n    --volume=envfile,kind=host,source=/etc/environment,readOnly=false --mount volume=envfile,target=/etc/environment  \\\n    --trust-keys-from-https \\\n    quay.io/coreos/awscli:master --exec=$bin -- \"$@\"; do\n      sleep 1\n  done\n}\nrun aws s3 --region $REGION  cp s3://us-east-1-checkr-kubernetes-dev/kube-aws/clusters/development/exported/stacks/default/userdata-worker-f7419ba1018c94335067216ec5e64c8b121066d34b73731f937131eaf6bcef37 /var/run/coreos/$USERDATA_FILE\n\nINSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\n\nexec /usr/bin/coreos-cloudinit --from-file /var/run/coreos/$USERDATA_FILE\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "IAMInstanceProfileWorker": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IAMRoleWorker"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "IAMManagedPolicyWorker": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": "Policy for managing kube-aws k8s Node Pool default ",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "ec2:Describe*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:AttachVolume",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DetachVolume",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::us-east-1-checkr-kubernetes-dev/kube-aws/clusters/development/exported/stacks/default/userdata-worker*"
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": "arn:aws:kms:us-east-1:927411751048:key/a9f9e689-e794-4b46-88a3-7642150a697e"
            },
            {
              "Action": "cloudformation:SignalResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:cloudformation:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":stack/",
                    {
                      "Ref": "AWS::StackName"
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": "autoscaling:Describe*",
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        }
      }
    },
    "IAMRoleWorker": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "-",
              "workerMR"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "IAMManagedPolicyWorker"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  },
  "Outputs": {
    "WorkerIAMRoleArn": {
      "Description": "The ARN of the IAM role for this Node Pool",
      "Value": {
        "Fn::GetAtt": [
          "IAMRoleWorker",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-WorkerIAMRoleArn"
        }
      }
    },
    "StackName": {
      "Description": "The name of this stack",
      "Value": {
        "Ref": "AWS::StackName"
      }
    }
  }
}
