// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Units units
// swagger:model Units
type Units string

const (
	// UnitsPERCENT captures enum value "PERCENT"
	UnitsPERCENT Units = "PERCENT"
	// UnitsMILLISECONDS captures enum value "MILLISECONDS"
	UnitsMILLISECONDS Units = "MILLISECONDS"
	// UnitsBYTES captures enum value "BYTES"
	UnitsBYTES Units = "BYTES"
	// UnitsGIGABYTES captures enum value "GIGABYTES"
	UnitsGIGABYTES Units = "GIGABYTES"
	// UnitsBYTESPERSECOND captures enum value "BYTES_PER_SECOND"
	UnitsBYTESPERSECOND Units = "BYTES_PER_SECOND"
	// UnitsMEGABYTESPERSECOND captures enum value "MEGABYTES_PER_SECOND"
	UnitsMEGABYTESPERSECOND Units = "MEGABYTES_PER_SECOND"
	// UnitsGIGABYTESPERHOUR captures enum value "GIGABYTES_PER_HOUR"
	UnitsGIGABYTESPERHOUR Units = "GIGABYTES_PER_HOUR"
	// UnitsSCALARPERSECOND captures enum value "SCALAR_PER_SECOND"
	UnitsSCALARPERSECOND Units = "SCALAR_PER_SECOND"
	// UnitsSCALAR captures enum value "SCALAR"
	UnitsSCALAR Units = "SCALAR"
)

// for schema
var unitsEnum []interface{}

func init() {
	var res []Units
	if err := json.Unmarshal([]byte(`["PERCENT","MILLISECONDS","BYTES","GIGABYTES","BYTES_PER_SECOND","MEGABYTES_PER_SECOND","GIGABYTES_PER_HOUR","SCALAR_PER_SECOND","SCALAR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		unitsEnum = append(unitsEnum, v)
	}
}

func (m Units) validateUnitsEnum(path, location string, value Units) error {
	if err := validate.Enum(path, location, value, unitsEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this units
func (m Units) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUnitsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
