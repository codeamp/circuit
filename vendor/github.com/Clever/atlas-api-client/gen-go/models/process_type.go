// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ProcessType process type
// swagger:model ProcessType
type ProcessType string

const (
	// ProcessTypeREPLICAPRIMARY captures enum value "REPLICA_PRIMARY"
	ProcessTypeREPLICAPRIMARY ProcessType = "REPLICA_PRIMARY"
	// ProcessTypeREPLICASECONDARY captures enum value "REPLICA_SECONDARY"
	ProcessTypeREPLICASECONDARY ProcessType = "REPLICA_SECONDARY"
	// ProcessTypeRECOVERING captures enum value "RECOVERING"
	ProcessTypeRECOVERING ProcessType = "RECOVERING"
	// ProcessTypeSHARDMONGOS captures enum value "SHARD_MONGOS"
	ProcessTypeSHARDMONGOS ProcessType = "SHARD_MONGOS"
	// ProcessTypeSHARDCONFIG captures enum value "SHARD_CONFIG"
	ProcessTypeSHARDCONFIG ProcessType = "SHARD_CONFIG"
	// ProcessTypeSHARDSTANDALONE captures enum value "SHARD_STANDALONE"
	ProcessTypeSHARDSTANDALONE ProcessType = "SHARD_STANDALONE"
	// ProcessTypeSHARDPRIMARY captures enum value "SHARD_PRIMARY"
	ProcessTypeSHARDPRIMARY ProcessType = "SHARD_PRIMARY"
	// ProcessTypeSHARDSECONDARY captures enum value "SHARD_SECONDARY"
	ProcessTypeSHARDSECONDARY ProcessType = "SHARD_SECONDARY"
	// ProcessTypeNODATA captures enum value "NO_DATA"
	ProcessTypeNODATA ProcessType = "NO_DATA"
)

// for schema
var processTypeEnum []interface{}

func init() {
	var res []ProcessType
	if err := json.Unmarshal([]byte(`["REPLICA_PRIMARY","REPLICA_SECONDARY","RECOVERING","SHARD_MONGOS","SHARD_CONFIG","SHARD_STANDALONE","SHARD_PRIMARY","SHARD_SECONDARY","NO_DATA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		processTypeEnum = append(processTypeEnum, v)
	}
}

func (m ProcessType) validateProcessTypeEnum(path, location string, value ProcessType) error {
	if err := validate.Enum(path, location, value, processTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this process type
func (m ProcessType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProcessTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
