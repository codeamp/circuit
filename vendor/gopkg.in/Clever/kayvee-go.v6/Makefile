include golang.mk
.DEFAULT_GOAL := test # override default goal set in library makefile

.PHONY: test benchmark-data clean bump-major bump-minor bump-patch tag-version $(PKGS)
SHELL := /bin/bash
PKGS = $(shell go list ./...)
$(eval $(call golang-version-check,1.10))

export _DEPLOY_ENV=testing
export _EXECUTION_NAME=abc123

define set-version
@echo $(VERS) > VERSION
@echo "// AUTOGENERATED: DO NOT EDIT" > version.go
@echo >> version.go
@echo "package kayvee" >> version.go
@echo >> version.go
@echo "// Version is a string containing the version of this library." >> version.go
@echo "var Version = \"$(VERS)\"" >> version.go
@git add VERSION version.go
@git commit -m "Bump to v$(VERS)"
endef

bump-major:
	$(eval VERS := $(shell cat VERSION | awk 'BEGIN{FS="."} {print $$1+1 ".0.0"}'))
	$(eval MAJOR_VERS := $(firstword $(subst ., ,$(VERS))))
	@find . -path ./.git -prune -o -type f -exec sed -i 's/gopkg\.in\/Clever\/kayvee-go\.v[[:digit:]]\+/gopkg\.in\/Clever\/kayvee-go\.v$(MAJOR_VERS)/' {} \;
	$(call set-version)

bump-minor:
	$(eval VERS := $(shell cat VERSION | awk 'BEGIN{FS="."} {print $$1 "." $$2+1 ".0"}'))
	$(call set-version)

bump-patch:
	$(eval VERS := $(shell cat VERSION | awk 'BEGIN{FS="."} {print $$1 "." $$2 "." $$3+1}'))
	$(call set-version)

tag-version:
	$(eval VERS := $(shell cat VERSION))
	@git tag v$(VERS)

test: tests.json benchmark-data $(PKGS)

clean:
	rm ./benchmarks/data/*.json ./benchmarks/data/*.yml

benchmark-data:
	@# Only download if the files don't exist
	@[ -f ./benchmarks/data/corpus-basic.json ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/corpus-basic.json > ./benchmarks/data/corpus-basic.json
	@[ -f ./benchmarks/data/corpus-pathological.json ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/corpus-pathological.json > ./benchmarks/data/corpus-pathological.json
	@[ -f ./benchmarks/data/corpus-realistic.json ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/corpus-realistic.json > ./benchmarks/data/corpus-realistic.json
	@[ -f ./benchmarks/data/kvconfig-basic.yml ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/kvconfig-basic.yml > ./benchmarks/data/kvconfig-basic.yml
	@[ -f ./benchmarks/data/kvconfig-pathological.yml ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/kvconfig-pathological.yml > ./benchmarks/data/kvconfig-pathological.yml
	@[ -f ./benchmarks/data/kvconfig-realistic.yml ] || curl https://raw.githubusercontent.com/Clever/kayvee/master/data/kvconfig-realistic.yml > ./benchmarks/data/kvconfig-realistic.yml


benchmarks: benchmark-data
	@go test -v -bench=./benchmarks

$(PKGS): golang-test-all-strict-deps
	@go get -d -t $@
	@go generate
	$(call golang-test-all-strict,$@)

tests.json:
	cp tests.json test/tests.json


install_deps: golang-dep-vendor-deps
	$(call golang-dep-vendor)